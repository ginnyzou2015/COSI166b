var search_data = {"index":{"searchIndex":["moviedata","movietest","mean()","movies()","new()","new()","predict()","rating()","rms()","run_test()","similarity()","stddev()","to_a()","viewers()"],"longSearchIndex":["moviedata","movietest","movietest#mean()","moviedata#movies()","moviedata::new()","movietest::new()","moviedata#predict()","moviedata#rating()","movietest#rms()","moviedata#run_test()","moviedata#similarity()","movietest#stddev()","movietest#to_a()","moviedata#viewers()"],"info":[["MovieData","","MovieData.html","","<p>(PA) Movies Part 2, Jing Zou, 1-26-2015\n"],["MovieTest","","MovieTest.html","",""],["mean","MovieTest","MovieTest.html#method-i-mean","()","<p>It returns the average predication error and each error is defined as the\nabsolute value of (predicted …\n"],["movies","MovieData","MovieData.html#method-i-movies","(u)","<p>It returns the array of movies that user u has watched\n"],["new","MovieData","MovieData.html#method-c-new","(*args)","<p>It takes a path to the folder containing the movie data (ml-100k)  If there\nis one argument, u.data is …\n"],["new","MovieTest","MovieTest.html#method-c-new","(predict_data)","<p>MovieTest can be generated by the z.run_test(k) It stores a list of tuples\ncontaining the user, movie, …\n"],["predict","MovieData","MovieData.html#method-i-predict","(u,m)","<p>It returns a floating point number between 1.0 and 5.0 as an estimate of\nwhat user u would rate movie …\n"],["rating","MovieData","MovieData.html#method-i-rating","(u,m)","<p>It returns the rating that user u gave movie m in the training set, and 0\nif user u did not rate movie …\n"],["rms","MovieTest","MovieTest.html#method-i-rms","()","<p>It returns the root mean square error of the prediction defined as sqrt of\n((sum of (predicted rating …\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(*k)","<p>It runs the z.predict method on the first k ratings in the test set and\nreturns a MovieTest object containing …\n"],["similarity","MovieData","MovieData.html#method-i-similarity","(user1,user2)","<p>Similarity is defined as Pearson correlation-based similarity\nsim(X,Y)=(E(XY)-E(X)E(Y))/sqrt((E(X^2)-E(X)^2)(E(Y^2)-E(Y)^2)) …\n"],["stddev","MovieTest","MovieTest.html#method-i-stddev","()","<p>It returns the standard deviation of the error defined as sqrt of ((sum of\n(each error - mean of error)^2)/number …\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()","<p>It returns an array of the predictions in the form [u,m,r,p]\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(m)","<p>It returns the array of users that have seen movie m\n"]]}}